[Network - Custom - Data missing from Firewall - Rule]
description = Data missing from Firewall
next_steps = {"version":1,"data":"Check that data is collected on forwarder receiving firewall data"}
recommended_actions = email
rule_description = Data missing from Firewall
rule_name = Custom - Data missing from Firewall
rule_title = Data missing from Firewall
security_domain = network
severity = high
default_owner =
default_status =
disabled = 0
drilldown_name = View events for this timespan
drilldown_search = index=checkpoint

[Endpoint - Custom - Unauthorized USB device blocked - Rule]
default_status = 1
description = An unauthorized USB device was detected and successfully blocked
drilldown_earliest_offset = $info_min_time$
drilldown_latest_offset = $info_max_time$
drilldown_name = View events for $signature$
drilldown_search = |datamodel "Intrusion_Detection" "Host_IDS_Attacks" search | where 'Host_IDS_Attacks.signature'="$signature$"
rule_description = An unauthorized USB device was detected and successfully blocked
rule_name = Custom - Unauthorized USB device blocked
rule_title = Unauthorized USB device ($signature$) blocked for user $user$
search = {"searches":[{"datamodel":"Intrusion_Detection","object":"Host_IDS_Attacks","earliest":"-24h@h","latest":"now","alert.suppress.fields":["user","signature"],"alert.suppress":1,"aggregates":[{"function":"values","attribute":"IDS_Attacks.signature","alias":"signature"},{"function":"count","attribute":"IDS_Attacks.src","alias":"src"},{"function":"max","attribute":"_time","alias":"lastTime"},{"function":"latest","attribute":"_raw","alias":"orig_raw"},{"function":"count"}],"eventFilter":"'IDS_Attacks.action'=\"blocked\"","resultFilter":{"field":"count","comparator":">","value":"0"},"splitby":[{"attribute":"IDS_Attacks.user","alias":"user"},{"attribute":"IDS_Attacks.src","alias":"src"}]}],"version":"1.0"}
security_domain = endpoint
severity = medium

[Identity - Custom - Potential password in user name - Rule]
description = Identifies potential passwords in clear text in user name field
next_steps = {"version":1,"data":"Notify user immediately that the password must be changed. If user cannot be reached, disable user account and inform user's manager."}
rule_description = A potential password ($incorrect_password$) has been identified in a user name field based on its entropy ($ut_shannon$). The password has been masked for security reasons.
rule_name = Custom - Potential password in user name
rule_title = Custom - Potential password in user name ($user$)
security_domain = identity
severity = high
default_owner =
default_status =
disabled = 0
drilldown_name =
drilldown_search =
recommended_actions =
search =
