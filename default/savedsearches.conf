
[Network - Custom - Data missing from Firewall - Rule]
action.email = 1
action.email.message.report = Data missing from Firewall
action.email.priority = 2
action.email.subject = Data missing from Firewall
action.email.to = someone@example.com
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
alert.suppress = 0
alert.track = 0
cron_schedule = 15 */4 * * *
dispatch.earliest_time = -4h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 0
search = index=checkpoint | stats count | where count==0

[Endpoint - Unauthorized USB device blocked - Rule]
action.risk = 1
action.risk._risk_object = user
action.risk._risk_object_type = user
action.risk._risk_score = 40
action.summary_index = 1
action.summary_index._name = notable
action.summary_index.ttl = 1p
alert.suppress = 1
alert.suppress.fields = user,signature
alert.suppress.period = 86400s
alert_comparator = greater than
alert_threshold = 0
alert_type = number of events
cron_schedule = 25 5 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
enableSched = 1
search = | datamodel "Intrusion_Detection" "Host_IDS_Attacks" search | where 'IDS_Attacks.action'="blocked" | stats values(IDS_Attacks.signature) as "signature",count(IDS_Attacks.src) as "src",max(_time) as "lastTime",latest(_raw) as "orig_raw",count by "IDS_Attacks.user","IDS_Attacks.src" | rename "IDS_Attacks.user" as "user","IDS_Attacks.src" as "src" | where 'count'>0

[Access - Custom - Physical access failure on multiple entry points - Rule]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.param._risk_object = user
action.risk.param._risk_object_type = user
action.risk.param._risk_score = 50
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
alert.suppress = 1
alert.suppress.fields = const_dedup_id
alert.suppress.period = 3600s
alert.track = 0
cron_schedule = 33 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
search = | tstats summariesonly=true allow_old_summaries=true dc(Authentication.src) as "distinct_count_src",max(_time) as "lastTime",values(Authentication.src) as "orig_raw" from datamodel=Authentication.Authentication where   nodename=Authentication.Failed_Authentication "Authentication.tag"="physical" by "Authentication.user"  | rename "Authentication.user" as "user" | where 'distinct_count_src'>5 | eval const_dedup_id="const_dedup_id"
